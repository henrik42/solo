["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Object",["^ "],"~$RegExp",["^ "]],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros"],"~:excludes",["~#set",[]],"~:name","~$solo.spa.sysprops","~:imports",null,"~:requires",["^ ","~$cljs.core.async","^>","~$r","~$reagent.core","^?","^?","~$http","~$cljs-http.client","^A","^A"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$<!","^>"],"~:defs",["^ ","~$initial-focus",["^ ","^:","~$solo.spa.sysprops/initial-focus","~:file","src/cljs/solo/spa/sysprops.cljs","~:line",10,"~:column",1,"~:end-line",10,"~:end-column",19,"~:meta",["^ ","^H","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^I",10,"^J",6,"^K",10,"^L",19],"~:tag","~$any"],"~$eval-in-backend",["^ ","~:protocol-inline",null,"^M",["^ ","^H","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^I",15,"^J",7,"^K",15,"^L",22,"~:arglists",["~#list",["~$quote",["^S",[["~$source-string"]]]]],"~:doc","Asynchronuously evaluates `source-string` in the backend JVM via\n  web-service `POST ws/eval/` (see `solo.spa/eval-string`)."],"^:","~$solo.spa.sysprops/eval-in-backend","~:variadic",false,"^H","src/cljs/solo/spa/sysprops.cljs","^L",22,"~:method-params",["^S",[["^U"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^J",1,"^I",15,"^K",15,"~:max-fixed-arity",1,"~:fn-var",true,"^R",["^S",["^T",["^S",[["^U"]]]]],"^V","Asynchronuously evaluates `source-string` in the backend JVM via\n  web-service `POST ws/eval/` (see `solo.spa/eval-string`)."],"~$reg-ex-str->reg-ex",["^ ","^Q",null,"^M",["^ ","^H","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^I",31,"^J",7,"^K",31,"^L",25,"^R",["^S",["^T",["^S",[["~$reg-ex-str"]]]]]],"^:","~$solo.spa.sysprops/reg-ex-str->reg-ex","^X",false,"^H","src/cljs/solo/spa/sysprops.cljs","^L",25,"^Y",["^S",[["^13"]]],"^Z",null,"^[",["^S",[null,null]],"^J",1,"^I",31,"^K",31,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^13"]]]]]],"~$get-properties",["^ ","^Q",null,"^M",["^ ","^H","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^I",39,"^J",7,"^K",39,"^L",21,"^R",["^S",["^T",["^S",[[]]]]],"^V","Returns the system properties of the JVM backend as a `[name\n  value]`-seq (both strings)."],"^:","~$solo.spa.sysprops/get-properties","^X",false,"^H","src/cljs/solo/spa/sysprops.cljs","^L",21,"^Y",["^S",[[]]],"^Z",null,"^[",["^S",[null,null]],"^J",1,"^I",39,"^K",39,"^10",0,"^11",true,"^R",["^S",["^T",["^S",[[]]]]],"^V","Returns the system properties of the JVM backend as a `[name\n  value]`-seq (both strings)."],"~$set-property",["^ ","^Q",null,"^M",["^ ","^H","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^I",51,"^J",7,"^K",51,"^L",19,"^R",["^S",["^T",["^S",[["~$name","~$value"]]]]],"^V","Asynchronuously sets the system property in the JVM backend."],"^:","~$solo.spa.sysprops/set-property","^X",false,"^H","src/cljs/solo/spa/sysprops.cljs","^L",19,"^Y",["^S",[["^18","^19"]]],"^Z",null,"^[",["^S",[null,null]],"^J",1,"^I",51,"^K",51,"^10",2,"^11",true,"^R",["^S",["^T",["^S",[["^18","^19"]]]]],"^V","Asynchronuously sets the system property in the JVM backend."],"~$clear-property",["^ ","^Q",null,"^M",["^ ","^H","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^I",57,"^J",7,"^K",57,"^L",21,"^R",["^S",["^T",["^S",[["^18"]]]]],"^V","Asynchronuously clears the system property in the JVM backend."],"^:","~$solo.spa.sysprops/clear-property","^X",false,"^H","src/cljs/solo/spa/sysprops.cljs","^L",21,"^Y",["^S",[["^18"]]],"^Z",null,"^[",["^S",[null,null]],"^J",1,"^I",57,"^K",57,"^10",1,"^11",true,"^R",["^S",["^T",["^S",[["^18"]]]]],"^V","Asynchronuously clears the system property in the JVM backend."],"~$sysprops-component",["^ ","^Q",null,"^M",["^ ","^H","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^I",65,"^J",7,"^K",65,"^L",25,"^R",["^S",["^T",["^S",[[]]]]],"^V","Self-contained Reagent component for accessing the system\n  properties in a JVM backend.\n\n  The component displays a table with rows (name and value), it\n  supports re-find-filtering rows by name and value, clearing and\n  changing existing properties and entering new properties.\n\n  The component carries its own state with:\n\n  :data                 : sorted/ordered [name value]-seq of system properties\n  :filter-names-reg-ex  : reg-ex-string for filtering rows by name\n  :filter-values-reg-ex : reg-ex-string for filtering rows by value\n  :selected-name        : mouse-over _selects_ a row and sets :selected-name to the row's name/key!\n  :mode                 : :create : enter a property name and value; :update : change a property's value\n  :property-name        : for :create/:update\n  :property-value       : for :create/:update\n  \n  :editing              : property name when `EDIT` was clicked\n\n  :value                : property value that is entered when `editing` and 'adding'\n  :new-property         : if non-nil in 'adding' mode. Will carry new property name."],"^:","~$solo.spa.sysprops/sysprops-component","^X",false,"^H","src/cljs/solo/spa/sysprops.cljs","^L",25,"^Y",["^S",[[]]],"^Z",null,"^[",["^S",[null,null]],"^J",1,"^I",65,"^K",65,"^10",0,"^11",true,"^R",["^S",["^T",["^S",[[]]]]],"^V","Self-contained Reagent component for accessing the system\n  properties in a JVM backend.\n\n  The component displays a table with rows (name and value), it\n  supports re-find-filtering rows by name and value, clearing and\n  changing existing properties and entering new properties.\n\n  The component carries its own state with:\n\n  :data                 : sorted/ordered [name value]-seq of system properties\n  :filter-names-reg-ex  : reg-ex-string for filtering rows by name\n  :filter-values-reg-ex : reg-ex-string for filtering rows by value\n  :selected-name        : mouse-over _selects_ a row and sets :selected-name to the row's name/key!\n  :mode                 : :create : enter a property name and value; :update : change a property's value\n  :property-name        : for :create/:update\n  :property-value       : for :create/:update\n  \n  :editing              : property name when `EDIT` was clicked\n\n  :value                : property value that is entered when `editing` and 'adding'\n  :new-property         : if non-nil in 'adding' mode. Will carry new property name."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^7","^7","^>","^>","~$r","^?","^?","^?"],"~:cljs.analyzer/constants",["^ ","~:seen",["^9",["~:thead","~:tbody","~:table","~:key","~:placeholder","~:else","~:float","~:create","~:td","~:value","~:th","~:component-did-mount","~:tr","~:default-value","~:mode","~:property-value","~:recur","~:type","~:update","~:filter-values-reg-ex","~:on-click","~:style","~:textarea","~:filter-names-reg-ex","~:property-name","~:query-params","~:on-mouse-over","~:div>input","~:input","~:on-change","~:body","~:selected-name","~:span","~:data","~:eval"]],"~:order",["^1N","^20","^29","^25","^1S","^1H","^28","^1E","^1C","^1O","^1M","^27","^1X","^1I","^23","^1T","^1L","^1W","^1Q","^1J","^1[","^1R","^22","^1G","^24","^1Z","^1V","^1D","^21","^26","^1K","^1U","^1Y","^1P","^1F"]],"^V",null]