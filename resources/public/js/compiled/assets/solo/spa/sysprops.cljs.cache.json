["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Object",["^ "],"~$RegExp",["^ "]],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros"],"~:excludes",["~#set",[]],"~:name","~$solo.spa.sysprops","~:imports",null,"~:requires",["^ ","~$cljs.core.async","^>","~$r","~$reagent.core","^?","^?","~$http","~$cljs-http.client","^A","^A"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$<!","^>"],"~:defs",["^ ","~$set-focus!",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","~:line",104,"~:column",7,"~:end-line",104,"~:end-column",17,"~:arglists",["~#list",["~$quote",["^O",[["~$target"]]]]]],"^:","~$solo.spa.sysprops/set-focus!","~:variadic",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",17,"~:method-params",["^O",[["^Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^O",[null,null]],"^K",1,"^J",104,"^L",104,"~:max-fixed-arity",1,"~:fn-var",true,"^N",["^O",["^P",["^O",[["^Q"]]]]]],"~$with-focus",["^ ","^G",null,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",79,"^K",7,"^L",79,"^M",17,"^N",["^O",["^P",["^O",[["^Q"]]]]]],"^:","~$solo.spa.sysprops/with-focus","^S",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",17,"^T",["^O",[["^Q"]]],"^U",null,"^V",["^O",[null,null]],"^K",1,"^J",79,"^L",79,"^W",1,"^X",true,"^N",["^O",["^P",["^O",[["^Q"]]]]]],"~$sysprops-component",["^ ","^G",null,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",111,"^K",7,"^L",111,"^M",25,"^N",["^O",["^P",["^O",[[]]]]],"~:doc","Self-contained Reagent component for accessing the system\n  properties in a JVM backend.\n\n  The component displays a table with rows (name and value), it\n  supports re-find-filtering rows by name and value, clearing and\n  changing existing properties and entering new properties.\n\n  The component carries its own state with:\n\n  :data                 : sorted/ordered [name value]-seq of system properties\n  :filter-names-reg-ex  : reg-ex-string for filtering rows by name\n  :filter-values-reg-ex : reg-ex-string for filtering rows by value\n  :selected-name        : mouse-over _selects_ a row and sets :selected-name to the row's name/key!\n  :mode                 : :create : enter a property name and value; :update : change a property's value\n  :property-name        : for :create/:update\n  :property-value       : for :create/:update\n  \n  :editing              : property name when `EDIT` was clicked\n\n  :value                : property value that is entered when `editing` and 'adding'\n  :new-property         : if non-nil in 'adding' mode. Will carry new property name."],"^:","~$solo.spa.sysprops/sysprops-component","^S",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",25,"^T",["^O",[[]]],"^U",null,"^V",["^O",[null,null]],"^K",1,"^J",111,"^L",111,"^W",0,"^X",true,"^N",["^O",["^P",["^O",[[]]]]],"^10","Self-contained Reagent component for accessing the system\n  properties in a JVM backend.\n\n  The component displays a table with rows (name and value), it\n  supports re-find-filtering rows by name and value, clearing and\n  changing existing properties and entering new properties.\n\n  The component carries its own state with:\n\n  :data                 : sorted/ordered [name value]-seq of system properties\n  :filter-names-reg-ex  : reg-ex-string for filtering rows by name\n  :filter-values-reg-ex : reg-ex-string for filtering rows by value\n  :selected-name        : mouse-over _selects_ a row and sets :selected-name to the row's name/key!\n  :mode                 : :create : enter a property name and value; :update : change a property's value\n  :property-name        : for :create/:update\n  :property-value       : for :create/:update\n  \n  :editing              : property name when `EDIT` was clicked\n\n  :value                : property value that is entered when `editing` and 'adding'\n  :new-property         : if non-nil in 'adding' mode. Will carry new property name."],"~$apply-focus",["^ ","^G",null,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",72,"^K",7,"^L",72,"^M",18,"^N",["^O",["^P",["^O",[[]]]]]],"^:","~$solo.spa.sysprops/apply-focus","^S",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",18,"^T",["^O",[[]]],"^U",null,"^V",["^O",[null,null]],"^K",1,"^J",72,"^L",72,"^W",0,"^X",true,"^N",["^O",["^P",["^O",[[]]]]]],"~$get-properties",["^ ","^G",null,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",34,"^K",7,"^L",34,"^M",21,"^N",["^O",["^P",["^O",[[]]]]],"^10","Returns the system properties of the JVM backend as a `[name\n  value]`-seq (both strings)."],"^:","~$solo.spa.sysprops/get-properties","^S",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",21,"^T",["^O",[[]]],"^U",null,"^V",["^O",[null,null]],"^K",1,"^J",34,"^L",34,"^W",0,"^X",true,"^N",["^O",["^P",["^O",[[]]]]],"^10","Returns the system properties of the JVM backend as a `[name\n  value]`-seq (both strings)."],"~$!focus-targets",["^ ","^:","~$solo.spa.sysprops/!focus-targets","^I","src/cljs/solo/spa/sysprops.cljs","^J",62,"^K",1,"^L",62,"^M",20,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",62,"^K",6,"^L",62,"^M",20],"~:tag","~$any"],"~$reg-ex-str->reg-ex",["^ ","^G",null,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",26,"^K",7,"^L",26,"^M",25,"^N",["^O",["^P",["^O",[["~$reg-ex-str"]]]]]],"^:","~$solo.spa.sysprops/reg-ex-str->reg-ex","^S",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",25,"^T",["^O",[["^1;"]]],"^U",null,"^V",["^O",[null,null]],"^K",1,"^J",26,"^L",26,"^W",1,"^X",true,"^N",["^O",["^P",["^O",[["^1;"]]]]]],"~$!focus",["^ ","^:","~$solo.spa.sysprops/!focus","^I","src/cljs/solo/spa/sysprops.cljs","^J",66,"^K",1,"^L",66,"^M",12,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",66,"^K",6,"^L",66,"^M",12],"^18","^19"],"~$set-property",["^ ","^G",null,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",46,"^K",7,"^L",46,"^M",19,"^N",["^O",["^P",["^O",[["~$name","~$value"]]]]],"^10","Asynchronuously sets the system property in the JVM backend."],"^:","~$solo.spa.sysprops/set-property","^S",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",19,"^T",["^O",[["^1@","^1A"]]],"^U",null,"^V",["^O",[null,null]],"^K",1,"^J",46,"^L",46,"^W",2,"^X",true,"^N",["^O",["^P",["^O",[["^1@","^1A"]]]]],"^10","Asynchronuously sets the system property in the JVM backend."],"~$clear-property",["^ ","^G",null,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",52,"^K",7,"^L",52,"^M",21,"^N",["^O",["^P",["^O",[["^1@"]]]]],"^10","Asynchronuously clears the system property in the JVM backend."],"^:","~$solo.spa.sysprops/clear-property","^S",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",21,"^T",["^O",[["^1@"]]],"^U",null,"^V",["^O",[null,null]],"^K",1,"^J",52,"^L",52,"^W",1,"^X",true,"^N",["^O",["^P",["^O",[["^1@"]]]]],"^10","Asynchronuously clears the system property in the JVM backend."],"~$eval-in-backend",["^ ","^G",null,"^H",["^ ","^I","/media/893f8471-5c13-40c1-8b8b-5ca0df2e3866/home/user/Documents/clojure-101/from-zero-to-hero/solo-project/src/cljs/solo/spa/sysprops.cljs","^J",10,"^K",7,"^L",10,"^M",22,"^N",["^O",["^P",["^O",[["~$source-string"]]]]],"^10","Asynchronuously evaluates `source-string` in the backend JVM via\n  web-service `POST ws/eval/` (see `solo.spa/eval-string`)."],"^:","~$solo.spa.sysprops/eval-in-backend","^S",false,"^I","src/cljs/solo/spa/sysprops.cljs","^M",22,"^T",["^O",[["^1F"]]],"^U",null,"^V",["^O",[null,null]],"^K",1,"^J",10,"^L",10,"^W",1,"^X",true,"^N",["^O",["^P",["^O",[["^1F"]]]]],"^10","Asynchronuously evaluates `source-string` in the backend JVM via\n  web-service `POST ws/eval/` (see `solo.spa/eval-string`)."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^7","^7","^>","^>","~$r","^?","^?","^?"],"~:cljs.analyzer/constants",["^ ","~:seen",["^9",["~:thead","~:tbody","~:table","~:key","~:placeholder","~:else","~:float","~:create","~:td","~:value","~:th","~:component-did-mount","~:tr","~:default-value","~:mode","~:property-value","~:recur","~:type","~:update","~:filter-values-reg-ex","~:on-click","~:style","~:textarea","~:filter-names-reg-ex","~:foo","~:property-name","~:query-params","~:on-mouse-over","~:div>input","~:input","~:add","~:on-change","~:body","~:selected-name","~:span","~:data","~:eval"]],"~:order",["^2:","^2D","^2@","^20","^1Q","^28","^1W","^2>","^29","^1[","^2C","^1N","^1L","^1X","^1V","^2B","^25","^1R","^2=","^21","^1U","^24","^1Z","^1S","^2<","^1P","^2?","^27","^23","^1M","^2;","^2A","^1T","^22","^26","^1Y","^1O"]],"^10",null]